Current working directory: /home/v-zhijunjia/CodecGen
2024-01-20 12:35:58 | INFO | fairseq.tasks.text_to_speech | Please install tensorboardX: pip install tensorboardX
/home/v-zhijunjia/miniconda3/envs/valle-4-23/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator MiniBatchKMeans from version 0.24.0 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
only_antoregressive is True
add_prenet is False
only_antoregressive is True
add_prenet is False
self.ar_text_prenet : Identity()
add_prenet：False
  0%|          | 0/50 [00:00<?, ?it/s]processing 0th semantic_sys file
0
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
135
[17, 17, 20, 296, 7, 479, 331, 331, 463, 463, 378, 378, 88, 88, 141, 141, 281, 31, 54, 172, 344, 344, 344, 344, 274, 186, 162, 54, 482, 238, 6, 336, 79, 79, 487, 288, 290, 290, 290, 290, 434, 434, 434, 339, 64, 212, 77, 97, 483, 483, 440, 44, 255, 215, 129, 82, 82, 74, 190, 488, 488, 488, 405, 206, 169, 349, 349, 155, 29, 29, 313, 313, 24, 314, 90, 221, 401, 82, 445, 445, 210, 210, 210, 210, 210, 203, 53, 70, 230, 230, 230, 230, 215, 215, 35, 96, 401, 36, 377, 123, 123, 123, 236, 239, 310, 107, 395, 395, 329, 443, 443, 240, 285, 34, 374, 374, 374, 186, 162, 54, 54, 224, 273, 494, 494, 175, 175, 81, 459, 275, 275, 303, 48, 193, 193]
after is :
135
[17, 296, 296, 159, 331, 331, 184, 491, 463, 173, 173, 29, 29, 141, 29, 313, 313, 186, 382, 186, 162, 344, 344, 38, 344, 344, 344, 274, 344, 482, 238, 38, 162, 161, 162, 6, 161, 79, 290, 290, 290, 434, 434, 290, 434, 290, 310, 434, 395, 395, 310, 395, 44, 236, 190, 140, 74, 140, 190, 488, 488, 405, 405, 405, 349, 349, 349, 277, 469, 277, 385, 277, 313, 313, 140, 401, 140, 210, 445, 210, 210, 210, 210, 210, 203, 230, 230, 53, 215, 230, 230, 230, 82, 215, 140, 123, 140, 123, 123, 123, 395, 395, 395, 329, 329, 329, 329, 147, 374, 329, 329, 147, 374, 186, 175, 186, 497, 175, 224, 54, 175, 54, 81, 175, 81, 275, 81, 81, 375, 275, 375, 48, 417, 417, 17]
tensor([272], device='cuda:0', dtype=torch.int32)
text_len:272
prefix_len:136
第0个序列meet end_token: 1024
第0个序列end， 终止长度为135（包含终止符）
所有序列终止
133
torch.Size([1, 133, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0494
generate
  2%|▏         | 1/50 [00:29<23:52, 29.23s/it]processing 1th semantic_sys file
1
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
185
[17, 17, 296, 296, 5, 5, 5, 5, 455, 251, 251, 251, 431, 431, 428, 428, 428, 428, 146, 146, 146, 358, 358, 358, 173, 352, 352, 352, 352, 352, 197, 197, 197, 7, 32, 239, 384, 114, 0, 264, 264, 264, 264, 264, 468, 406, 42, 43, 345, 141, 141, 141, 141, 141, 281, 54, 54, 9, 58, 72, 72, 72, 110, 110, 443, 139, 139, 139, 122, 122, 143, 36, 472, 393, 393, 155, 262, 262, 262, 262, 262, 387, 387, 175, 175, 175, 335, 440, 440, 89, 446, 446, 94, 94, 199, 335, 440, 145, 415, 415, 415, 415, 35, 35, 26, 26, 26, 241, 81, 470, 443, 313, 313, 143, 36, 449, 34, 469, 469, 178, 416, 233, 401, 82, 401, 20, 32, 354, 159, 159, 159, 159, 236, 35, 35, 401, 401, 82, 20, 20, 377, 377, 374, 374, 374, 132, 132, 422, 236, 239, 310, 107, 107, 395, 395, 374, 374, 132, 88, 88, 81, 242, 116, 10, 10, 479, 331, 331, 265, 265, 265, 85, 85, 85, 207, 207, 207, 19, 19, 19, 19, 454, 193, 193, 17]
after is :
185
[17, 17, 244, 82, 184, 320, 320, 127, 22, 127, 5, 5, 5, 5, 455, 251, 241, 455, 241, 251, 431, 428, 428, 428, 428, 358, 358, 358, 352, 358, 352, 352, 352, 352, 197, 82, 127, 198, 0, 114, 264, 345, 141, 468, 468, 141, 347, 281, 43, 245, 245, 347, 141, 281, 142, 281, 54, 142, 9, 9, 72, 139, 72, 72, 293, 293, 215, 293, 393, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 497, 262, 262, 335, 440, 483, 335, 89, 440, 440, 440, 335, 199, 94, 415, 199, 251, 255, 251, 164, 431, 431, 251, 443, 251, 241, 443, 469, 431, 431, 469, 469, 431, 233, 143, 233, 469, 178, 458, 469, 178, 159, 401, 82, 143, 159, 108, 108, 401, 75, 108, 108, 108, 108, 82, 236, 108, 377, 374, 374, 82, 374, 236, 239, 236, 374, 374, 374, 374, 374, 88, 88, 479, 255, 479, 331, 309, 10, 331, 331, 265, 479, 265, 265, 85, 265, 387, 207, 207, 19, 98, 98, 85, 19, 207, 454, 78, 13, 82, 82, 417, 237, 128, 128, 244, 193]
tensor([372], device='cuda:0', dtype=torch.int32)
text_len:372
prefix_len:186
第0个序列meet end_token: 1024
第0个序列end， 终止长度为185（包含终止符）
所有序列终止
183
torch.Size([1, 183, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0504
generate
  4%|▍         | 2/50 [01:15<31:17, 39.12s/it]processing 2th semantic_sys file
2
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
128
[17, 17, 296, 72, 72, 268, 268, 268, 293, 43, 43, 43, 345, 109, 109, 443, 443, 443, 240, 240, 175, 175, 219, 485, 485, 11, 11, 11, 116, 64, 212, 465, 26, 359, 359, 166, 166, 324, 324, 3, 3, 14, 259, 440, 287, 145, 111, 111, 443, 378, 378, 43, 345, 345, 109, 109, 432, 330, 330, 116, 64, 76, 82, 335, 483, 440, 145, 415, 415, 415, 415, 415, 35, 35, 34, 34, 191, 191, 191, 314, 314, 314, 32, 32, 32, 491, 384, 114, 180, 92, 92, 92, 92, 92, 240, 240, 35, 35, 96, 393, 205, 205, 261, 25, 148, 148, 498, 498, 498, 387, 271, 368, 368, 453, 54, 86, 238, 6, 82, 272, 41, 93, 93, 93, 19, 19, 193, 193]
after is :
128
[17, 17, 296, 296, 296, 72, 491, 72, 373, 268, 110, 268, 268, 109, 109, 109, 443, 481, 139, 280, 139, 139, 175, 293, 293, 293, 81, 359, 359, 11, 359, 457, 457, 474, 166, 359, 359, 166, 464, 464, 166, 166, 111, 440, 111, 111, 287, 111, 438, 111, 438, 364, 438, 111, 111, 111, 43, 432, 330, 276, 94, 330, 330, 330, 330, 440, 145, 415, 415, 415, 415, 415, 35, 415, 415, 35, 92, 457, 92, 92, 114, 457, 92, 92, 114, 261, 167, 261, 92, 261, 234, 261, 261, 25, 261, 498, 498, 186, 54, 313, 86, 54, 86, 6, 238, 93, 93, 93, 93, 93, 207, 93, 93, 207, 207, 454, 454, 78, 78, 439, 439, 439, 237, 439, 421, 193, 193, 193]
tensor([258], device='cuda:0', dtype=torch.int32)
text_len:258
prefix_len:130
第0个序列meet end_token: 1024
第0个序列end， 终止长度为127（包含终止符）
所有序列终止
125
torch.Size([1, 125, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0505
generate
  6%|▌         | 3/50 [01:39<25:27, 32.50s/it]processing 3th semantic_sys file
3
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
189
[17, 17, 20, 20, 296, 177, 177, 177, 177, 131, 133, 389, 389, 389, 389, 58, 58, 72, 72, 110, 110, 110, 443, 139, 139, 139, 293, 240, 215, 35, 35, 35, 197, 96, 401, 82, 108, 87, 87, 87, 87, 236, 129, 259, 82, 119, 180, 499, 265, 265, 85, 146, 146, 146, 146, 146, 252, 252, 24, 24, 472, 196, 196, 217, 429, 429, 429, 429, 429, 429, 246, 246, 246, 3, 3, 197, 226, 226, 82, 440, 287, 255, 255, 255, 251, 251, 241, 431, 235, 235, 235, 235, 235, 235, 235, 413, 348, 335, 14, 14, 440, 287, 319, 319, 348, 64, 212, 212, 384, 34, 278, 139, 251, 241, 431, 443, 443, 146, 438, 416, 416, 416, 239, 144, 106, 106, 91, 91, 91, 405, 206, 206, 240, 24, 35, 35, 478, 232, 232, 232, 238, 336, 272, 470, 470, 443, 240, 240, 24, 325, 41, 324, 324, 464, 464, 89, 446, 446, 203, 394, 76, 129, 82, 74, 425, 386, 386, 431, 265, 265, 480, 85, 299, 203, 203, 53, 53, 291, 291, 291, 275, 303, 303, 303, 48, 48, 193, 193, 193]
after is :
189
[17, 17, 296, 296, 188, 184, 177, 177, 177, 364, 177, 345, 177, 345, 389, 389, 58, 58, 58, 58, 110, 139, 293, 110, 293, 215, 82, 215, 215, 472, 96, 82, 472, 87, 96, 401, 87, 129, 82, 82, 108, 265, 265, 265, 119, 265, 265, 85, 85, 85, 85, 146, 429, 196, 429, 399, 429, 429, 429, 429, 246, 3, 3, 246, 246, 19, 19, 440, 335, 3, 464, 255, 255, 235, 319, 431, 241, 241, 235, 319, 241, 235, 235, 235, 319, 319, 335, 335, 200, 319, 440, 319, 348, 348, 319, 348, 251, 319, 348, 348, 431, 416, 431, 241, 387, 431, 438, 431, 431, 431, 153, 153, 146, 146, 146, 146, 206, 146, 314, 146, 206, 314, 232, 232, 478, 232, 232, 265, 41, 232, 470, 470, 240, 232, 41, 470, 41, 41, 325, 240, 240, 240, 406, 337, 406, 42, 147, 89, 464, 464, 446, 74, 82, 74, 465, 259, 74, 425, 386, 431, 65, 386, 203, 480, 299, 299, 399, 291, 291, 399, 203, 291, 203, 291, 303, 243, 291, 303, 48, 48, 303, 82, 417, 417, 82, 128, 244, 193, 193]
tensor([380], device='cuda:0', dtype=torch.int32)
text_len:380
prefix_len:190
第0个序列meet end_token: 1024
第0个序列end， 终止长度为190（包含终止符）
所有序列终止
188
torch.Size([1, 188, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0506
generate
  8%|▊         | 4/50 [02:27<29:22, 38.32s/it]processing 4th semantic_sys file
4
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
133
[17, 17, 491, 296, 373, 451, 451, 451, 30, 30, 464, 464, 254, 254, 254, 254, 240, 131, 393, 393, 234, 155, 25, 25, 148, 387, 387, 313, 313, 186, 349, 205, 205, 25, 29, 189, 189, 189, 313, 240, 240, 240, 325, 34, 257, 257, 257, 257, 31, 9, 9, 221, 239, 384, 371, 485, 485, 374, 374, 374, 132, 122, 35, 82, 449, 41, 41, 41, 324, 324, 3, 3, 335, 14, 440, 440, 89, 55, 446, 446, 67, 33, 394, 76, 129, 20, 354, 354, 470, 476, 171, 171, 171, 171, 171, 252, 24, 314, 35, 401, 401, 82, 74, 190, 441, 153, 153, 153, 153, 387, 387, 387, 387, 355, 37, 175, 359, 359, 359, 474, 474, 41, 41, 19, 19, 19, 454, 305, 128, 193, 193, 193, 17]
after is :
133
[17, 17, 17, 296, 296, 373, 140, 30, 451, 451, 451, 30, 30, 30, 30, 58, 254, 240, 254, 254, 393, 393, 393, 393, 393, 25, 25, 261, 25, 25, 25, 205, 261, 25, 261, 25, 25, 234, 293, 261, 139, 122, 122, 24, 34, 24, 34, 24, 191, 9, 257, 9, 9, 31, 86, 82, 384, 336, 86, 374, 371, 374, 374, 374, 374, 374, 132, 41, 41, 41, 41, 41, 41, 3, 440, 440, 335, 440, 89, 322, 446, 33, 33, 67, 394, 76, 394, 74, 351, 74, 476, 252, 171, 171, 171, 252, 24, 252, 131, 314, 401, 259, 74, 190, 82, 437, 424, 424, 153, 424, 175, 424, 424, 182, 81, 175, 175, 175, 41, 454, 474, 19, 454, 41, 13, 237, 454, 237, 19, 128, 417, 193, 193]
tensor([268], device='cuda:0', dtype=torch.int32)
text_len:268
prefix_len:134
第0个序列meet end_token: 1024
第0个序列end， 终止长度为134（包含终止符）
所有序列终止
132
torch.Size([1, 132, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0509
generate
 10%|█         | 5/50 [02:53<25:23, 33.86s/it]processing 5th semantic_sys file
5
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
115
[17, 17, 20, 20, 108, 377, 87, 87, 378, 399, 70, 70, 65, 65, 153, 481, 387, 387, 387, 240, 285, 34, 84, 302, 302, 293, 293, 14, 14, 14, 411, 287, 287, 284, 206, 206, 240, 348, 348, 196, 10, 309, 479, 331, 331, 443, 443, 178, 178, 35, 96, 96, 54, 54, 86, 6, 82, 272, 371, 93, 41, 41, 324, 324, 3, 3, 335, 14, 226, 440, 177, 177, 177, 177, 177, 35, 401, 196, 70, 70, 65, 65, 428, 428, 428, 146, 146, 252, 314, 314, 32, 239, 420, 420, 420, 420, 422, 416, 239, 144, 144, 180, 106, 106, 426, 426, 426, 426, 426, 426, 282, 282, 303, 303, 193]
after is :
115
[17, 17, 296, 296, 108, 108, 108, 140, 87, 70, 473, 70, 65, 70, 65, 306, 306, 306, 467, 372, 467, 467, 467, 467, 84, 84, 467, 467, 293, 335, 293, 14, 89, 293, 335, 89, 348, 348, 10, 10, 10, 443, 443, 178, 178, 443, 178, 96, 342, 232, 96, 232, 86, 86, 272, 82, 93, 272, 403, 93, 207, 207, 93, 41, 3, 3, 177, 177, 188, 457, 177, 177, 177, 399, 457, 457, 146, 252, 252, 146, 146, 301, 252, 420, 420, 420, 420, 420, 420, 416, 82, 27, 106, 284, 426, 144, 426, 426, 426, 426, 282, 426, 282, 282, 303, 282, 388, 117, 303, 303, 48, 48, 48, 193, 17]
tensor([232], device='cuda:0', dtype=torch.int32)
text_len:232
prefix_len:116
第0个序列meet end_token: 1024
第0个序列end， 终止长度为116（包含终止符）
所有序列终止
114
torch.Size([1, 114, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0514
generate
 12%|█▏        | 6/50 [03:13<21:24, 29.19s/it]processing 6th semantic_sys file
6
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
207
[17, 20, 296, 296, 66, 68, 68, 115, 267, 267, 329, 301, 175, 175, 423, 423, 423, 486, 486, 460, 240, 240, 285, 34, 34, 177, 236, 251, 251, 241, 431, 431, 376, 376, 376, 376, 460, 146, 178, 96, 96, 39, 86, 238, 6, 272, 472, 156, 156, 156, 156, 156, 313, 186, 186, 162, 232, 172, 172, 115, 273, 106, 106, 153, 153, 153, 387, 387, 387, 372, 406, 245, 245, 399, 399, 217, 70, 70, 65, 284, 284, 284, 315, 450, 450, 450, 450, 274, 274, 122, 24, 35, 82, 227, 97, 483, 197, 197, 7, 251, 251, 241, 235, 235, 235, 235, 235, 235, 235, 235, 200, 200, 200, 464, 188, 340, 116, 94, 94, 331, 230, 230, 230, 230, 169, 402, 402, 402, 401, 82, 377, 87, 87, 87, 186, 186, 162, 482, 172, 115, 273, 273, 265, 265, 265, 85, 85, 146, 146, 58, 58, 183, 156, 156, 156, 156, 271, 31, 162, 342, 342, 115, 273, 145, 151, 240, 240, 314, 239, 469, 469, 469, 31, 9, 142, 221, 20, 261, 25, 470, 470, 486, 486, 486, 460, 460, 178, 178, 178, 96, 96, 99, 436, 436, 436, 60, 60, 298, 298, 298, 303, 303, 303, 48, 193, 193, 17]
after is :
207
[17, 17, 296, 296, 296, 66, 66, 66, 172, 68, 115, 115, 172, 213, 444, 423, 175, 423, 175, 423, 423, 423, 423, 423, 175, 423, 457, 423, 423, 241, 251, 241, 241, 376, 385, 251, 241, 431, 376, 376, 376, 376, 460, 376, 96, 82, 96, 6, 238, 82, 96, 96, 156, 156, 272, 82, 162, 162, 162, 232, 38, 162, 232, 273, 232, 38, 68, 273, 273, 273, 273, 70, 245, 245, 217, 217, 65, 217, 217, 315, 315, 473, 70, 274, 315, 315, 315, 274, 274, 274, 413, 26, 82, 251, 26, 251, 235, 235, 235, 241, 235, 235, 235, 235, 235, 235, 235, 255, 235, 200, 331, 199, 199, 94, 230, 230, 230, 331, 230, 352, 402, 230, 230, 87, 352, 87, 38, 87, 87, 87, 232, 87, 273, 172, 115, 115, 265, 115, 273, 146, 115, 146, 115, 146, 146, 58, 58, 146, 183, 313, 186, 183, 342, 342, 54, 31, 54, 31, 342, 342, 224, 494, 314, 240, 494, 240, 240, 240, 393, 393, 470, 25, 393, 393, 178, 25, 460, 261, 470, 151, 178, 486, 486, 96, 436, 436, 96, 178, 60, 298, 60, 303, 436, 303, 298, 303, 48, 48, 417, 417, 48, 237, 48, 128, 417, 193, 17]
tensor([416], device='cuda:0', dtype=torch.int32)
text_len:416
prefix_len:208
第0个序列meet end_token: 1024
第0个序列end， 终止长度为207（包含终止符）
所有序列终止
205
torch.Size([1, 205, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0516
generate
 14%|█▍        | 7/50 [04:09<27:20, 38.14s/it]processing 7th semantic_sys file
7
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
188
[17, 17, 296, 296, 114, 45, 45, 240, 285, 34, 111, 151, 151, 240, 99, 99, 436, 436, 395, 395, 242, 242, 116, 33, 250, 217, 398, 398, 398, 374, 374, 368, 368, 368, 453, 168, 469, 469, 469, 143, 143, 35, 401, 259, 354, 425, 359, 286, 286, 286, 286, 286, 464, 464, 355, 355, 355, 355, 37, 173, 197, 197, 198, 198, 22, 283, 455, 455, 143, 129, 129, 401, 82, 144, 27, 180, 284, 284, 315, 315, 315, 450, 450, 450, 450, 413, 413, 413, 64, 64, 243, 243, 36, 36, 227, 227, 227, 419, 419, 419, 439, 427, 56, 247, 312, 126, 23, 23, 23, 101, 391, 391, 491, 20, 491, 20, 320, 345, 345, 141, 141, 141, 141, 281, 281, 453, 168, 168, 44, 44, 240, 285, 335, 14, 14, 411, 411, 153, 153, 274, 8, 8, 354, 485, 213, 213, 252, 252, 24, 239, 371, 324, 324, 464, 11, 11, 11, 330, 116, 33, 394, 77, 478, 232, 232, 172, 86, 26, 26, 251, 241, 81, 444, 444, 171, 171, 246, 246, 19, 19, 19, 173, 173, 352, 352, 193, 193, 17]
after is :
188
[17, 17, 140, 296, 140, 82, 184, 82, 7, 127, 127, 127, 127, 406, 151, 448, 406, 151, 151, 99, 169, 169, 169, 470, 150, 150, 169, 395, 99, 169, 99, 116, 242, 116, 116, 116, 99, 242, 199, 368, 199, 368, 94, 94, 278, 368, 31, 278, 494, 286, 286, 494, 278, 278, 485, 431, 386, 431, 386, 468, 474, 468, 264, 286, 286, 3, 59, 468, 59, 59, 452, 313, 468, 216, 22, 216, 283, 216, 458, 143, 82, 82, 455, 27, 82, 82, 27, 144, 351, 351, 450, 315, 450, 450, 413, 76, 76, 64, 419, 36, 397, 133, 419, 141, 419, 345, 133, 141, 141, 141, 281, 281, 397, 141, 281, 453, 141, 9, 168, 483, 44, 44, 411, 255, 496, 44, 8, 274, 274, 274, 213, 496, 354, 213, 274, 8, 239, 213, 213, 213, 325, 324, 324, 324, 11, 379, 324, 232, 33, 33, 379, 68, 232, 115, 251, 26, 251, 26, 251, 241, 431, 251, 431, 431, 444, 431, 171, 207, 207, 207, 246, 246, 207, 173, 352, 352, 352, 352, 439, 439, 439, 237, 237, 128, 244, 244, 193, 17]
tensor([378], device='cuda:0', dtype=torch.int32)
text_len:378
prefix_len:190
第0个序列meet end_token: 1024
第0个序列end， 终止长度为187（包含终止符）
所有序列终止
185
torch.Size([1, 185, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0523
generate
 16%|█▌        | 8/50 [04:56<28:35, 40.85s/it]processing 8th semantic_sys file
8
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
161
[17, 17, 296, 320, 5, 5, 5, 455, 455, 280, 104, 104, 104, 443, 240, 240, 337, 337, 324, 324, 3, 335, 14, 14, 145, 145, 145, 428, 428, 146, 146, 252, 24, 325, 34, 324, 324, 464, 464, 355, 355, 355, 14, 14, 14, 14, 82, 411, 287, 405, 405, 169, 169, 349, 352, 352, 29, 29, 277, 277, 313, 385, 24, 35, 36, 131, 133, 133, 364, 345, 141, 141, 141, 141, 141, 281, 31, 54, 54, 142, 142, 142, 221, 336, 336, 197, 80, 80, 20, 491, 82, 74, 190, 487, 288, 288, 213, 324, 301, 301, 143, 129, 259, 74, 354, 153, 153, 153, 387, 387, 387, 387, 274, 186, 162, 54, 54, 86, 238, 6, 336, 272, 377, 123, 123, 374, 406, 406, 467, 459, 459, 271, 271, 31, 39, 39, 390, 390, 390, 390, 390, 390, 390, 160, 18, 18, 18, 18, 18, 112, 112, 112, 237, 237, 439, 78, 128, 491, 491, 193, 17]
after is :
161
[17, 17, 296, 82, 140, 82, 82, 7, 127, 127, 127, 4, 127, 5, 127, 104, 104, 280, 104, 104, 468, 468, 104, 4, 337, 468, 337, 324, 337, 14, 3, 337, 14, 14, 14, 438, 85, 239, 384, 146, 239, 371, 371, 324, 371, 464, 324, 14, 371, 464, 464, 411, 423, 423, 324, 464, 335, 277, 169, 130, 234, 352, 277, 280, 280, 131, 131, 325, 277, 131, 131, 131, 345, 133, 277, 141, 133, 141, 345, 345, 345, 142, 141, 281, 141, 54, 9, 142, 142, 74, 190, 82, 190, 82, 74, 74, 190, 74, 488, 74, 129, 301, 301, 74, 129, 74, 496, 496, 441, 496, 496, 274, 54, 496, 54, 54, 54, 86, 86, 39, 54, 238, 377, 108, 236, 377, 123, 374, 123, 377, 123, 123, 123, 82, 123, 374, 374, 487, 374, 459, 459, 88, 374, 374, 271, 271, 271, 390, 390, 160, 390, 112, 439, 18, 237, 421, 128, 244, 193, 193, 193]
tensor([324], device='cuda:0', dtype=torch.int32)
text_len:324
prefix_len:162
第0个序列meet end_token: 1024
第0个序列end， 终止长度为162（包含终止符）
所有序列终止
160
torch.Size([1, 160, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0527
generate
 18%|█▊        | 9/50 [05:31<26:44, 39.14s/it]processing 9th semantic_sys file
9
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
82
[17, 17, 17, 20, 108, 119, 180, 486, 486, 486, 85, 146, 146, 438, 169, 349, 349, 205, 261, 25, 148, 148, 148, 387, 387, 372, 396, 467, 277, 277, 37, 24, 239, 131, 419, 419, 439, 225, 225, 225, 225, 20, 20, 7, 7, 7, 127, 430, 430, 430, 325, 34, 114, 443, 443, 240, 240, 236, 35, 259, 108, 119, 470, 278, 278, 139, 175, 175, 219, 219, 219, 477, 477, 477, 477, 132, 132, 98, 13, 13, 193, 193]
after is :
82
[17, 17, 17, 108, 108, 351, 184, 289, 289, 140, 106, 306, 146, 306, 264, 468, 146, 349, 205, 245, 205, 349, 205, 205, 372, 372, 387, 457, 25, 277, 385, 277, 385, 225, 82, 82, 430, 430, 82, 127, 140, 0, 127, 82, 0, 114, 222, 114, 114, 216, 114, 313, 119, 129, 129, 119, 108, 351, 351, 139, 351, 139, 293, 293, 293, 219, 219, 477, 477, 477, 219, 477, 374, 132, 355, 132, 132, 98, 13, 98, 193, 193]
tensor([166], device='cuda:0', dtype=torch.int32)
text_len:166
prefix_len:84
第0个序列meet end_token: 1024
第0个序列end， 终止长度为82（包含终止符）
所有序列终止
80
torch.Size([1, 80, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:ASI_arctic_b0536
generate
 20%|██        | 10/50 [05:43<20:29, 30.74s/it]processing 10th semantic_sys file
10
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
200
[17, 17, 296, 140, 320, 7, 7, 7, 7, 127, 127, 114, 430, 430, 71, 71, 368, 281, 453, 9, 183, 183, 451, 30, 30, 30, 30, 422, 236, 129, 82, 108, 119, 308, 308, 308, 308, 308, 308, 308, 308, 313, 348, 64, 212, 212, 22, 283, 283, 455, 236, 236, 129, 401, 140, 384, 119, 470, 432, 432, 330, 94, 94, 94, 199, 199, 120, 120, 275, 304, 379, 379, 243, 77, 269, 54, 172, 224, 351, 89, 89, 322, 67, 394, 394, 239, 310, 107, 395, 180, 180, 284, 284, 206, 206, 240, 34, 416, 416, 416, 192, 242, 242, 116, 94, 199, 69, 462, 462, 130, 402, 402, 66, 482, 172, 115, 273, 470, 403, 171, 171, 422, 143, 458, 82, 144, 208, 106, 106, 481, 481, 481, 206, 206, 240, 175, 122, 122, 24, 310, 107, 107, 219, 219, 477, 477, 477, 477, 301, 301, 8, 32, 32, 354, 354, 180, 376, 376, 376, 376, 460, 178, 143, 458, 144, 27, 106, 125, 125, 125, 125, 348, 33, 33, 394, 217, 217, 473, 429, 429, 429, 429, 429, 429, 246, 246, 246, 19, 19, 19, 19, 19, 454, 454, 454, 78, 140, 140, 193, 17]
after is :
200
[17, 17, 140, 296, 7, 114, 7, 7, 7, 430, 127, 114, 71, 151, 54, 71, 368, 281, 9, 54, 183, 9, 183, 451, 30, 143, 143, 143, 108, 129, 82, 308, 351, 119, 308, 313, 308, 388, 212, 313, 313, 64, 212, 131, 472, 64, 22, 472, 283, 455, 455, 351, 119, 82, 351, 432, 119, 330, 432, 351, 388, 120, 195, 195, 195, 195, 195, 243, 195, 195, 195, 77, 77, 390, 390, 440, 483, 83, 483, 440, 97, 83, 67, 394, 83, 239, 394, 180, 180, 180, 180, 306, 180, 405, 206, 178, 178, 405, 306, 178, 306, 242, 242, 192, 199, 94, 94, 199, 199, 94, 402, 69, 199, 130, 223, 130, 172, 172, 232, 171, 172, 171, 143, 252, 143, 171, 458, 458, 143, 143, 481, 481, 351, 144, 481, 122, 206, 481, 293, 293, 206, 107, 219, 219, 8, 8, 310, 301, 301, 301, 301, 8, 8, 354, 376, 376, 82, 376, 376, 376, 376, 178, 376, 376, 458, 192, 426, 458, 125, 206, 426, 348, 33, 125, 348, 429, 250, 429, 429, 429, 429, 429, 429, 246, 429, 429, 19, 429, 429, 429, 454, 454, 454, 19, 78, 417, 78, 193, 244, 193]
tensor([402], device='cuda:0', dtype=torch.int32)
text_len:402
prefix_len:201
第0个序列meet end_token: 1024
第0个序列end， 终止长度为201（包含终止符）
所有序列终止
199
torch.Size([1, 199, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:KSP_arctic_b0492
generate
 22%|██▏       | 11/50 [06:36<24:23, 37.53s/it]processing 11th semantic_sys file
11
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
190
[17, 17, 17, 296, 412, 412, 287, 287, 111, 111, 111, 438, 438, 422, 422, 162, 232, 232, 172, 172, 115, 273, 470, 443, 120, 240, 240, 24, 314, 314, 239, 36, 335, 483, 440, 440, 287, 89, 89, 446, 446, 67, 64, 212, 212, 384, 490, 490, 490, 490, 31, 232, 54, 142, 142, 196, 196, 217, 473, 65, 278, 278, 368, 31, 54, 54, 238, 6, 82, 272, 114, 283, 255, 455, 399, 217, 70, 473, 65, 65, 486, 486, 460, 460, 240, 143, 36, 82, 449, 300, 300, 334, 355, 355, 355, 406, 335, 440, 440, 83, 253, 253, 253, 253, 253, 453, 453, 221, 196, 479, 479, 307, 307, 307, 307, 61, 167, 35, 35, 36, 133, 133, 364, 276, 181, 181, 181, 240, 285, 402, 401, 401, 401, 401, 82, 82, 108, 119, 351, 351, 360, 360, 360, 200, 76, 458, 458, 192, 176, 176, 135, 135, 200, 200, 200, 464, 255, 255, 255, 8, 8, 354, 354, 106, 113, 113, 113, 113, 113, 113, 113, 274, 413, 413, 233, 233, 233, 140, 227, 227, 419, 439, 439, 439, 78, 140, 140, 140, 193, 17]
after is :
190
[17, 17, 296, 296, 140, 296, 296, 82, 111, 111, 111, 438, 438, 186, 438, 186, 422, 162, 115, 68, 68, 232, 68, 470, 273, 240, 240, 240, 240, 120, 486, 240, 240, 240, 325, 440, 89, 440, 89, 89, 440, 322, 33, 394, 116, 490, 490, 116, 33, 31, 490, 490, 490, 258, 473, 196, 196, 31, 31, 217, 217, 217, 238, 31, 258, 258, 258, 258, 258, 473, 258, 238, 238, 217, 196, 217, 217, 217, 217, 217, 217, 473, 460, 473, 486, 486, 365, 460, 460, 486, 460, 59, 334, 334, 334, 59, 406, 452, 452, 335, 452, 253, 253, 281, 9, 440, 9, 253, 9, 9, 9, 479, 196, 309, 331, 307, 307, 61, 307, 167, 307, 457, 276, 181, 181, 181, 181, 364, 181, 401, 181, 181, 396, 164, 401, 82, 401, 164, 82, 214, 214, 360, 164, 200, 200, 192, 200, 192, 176, 200, 464, 135, 200, 464, 200, 248, 464, 464, 464, 8, 354, 354, 8, 82, 180, 180, 113, 180, 113, 113, 113, 113, 450, 167, 233, 167, 233, 82, 227, 439, 439, 439, 417, 421, 78, 140, 128, 244, 244, 17]
tensor([382], device='cuda:0', dtype=torch.int32)
text_len:382
prefix_len:191
第0个序列meet end_token: 1024
第0个序列end， 终止长度为191（包含终止符）
所有序列终止
189
torch.Size([1, 189, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:KSP_arctic_b0499
generate
 24%|██▍       | 12/50 [07:24<25:48, 40.74s/it]processing 12th semantic_sys file
12
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
202
[17, 17, 17, 140, 188, 177, 177, 177, 177, 177, 36, 131, 133, 133, 345, 389, 389, 389, 389, 131, 58, 58, 72, 72, 110, 110, 443, 443, 240, 252, 252, 215, 215, 401, 401, 96, 140, 140, 377, 87, 87, 87, 87, 236, 129, 82, 384, 180, 265, 265, 428, 146, 146, 146, 252, 252, 314, 314, 32, 196, 196, 429, 429, 429, 429, 429, 429, 429, 246, 246, 3, 3, 335, 440, 255, 255, 255, 255, 251, 241, 431, 431, 235, 235, 235, 235, 235, 235, 235, 235, 413, 200, 200, 303, 117, 335, 335, 440, 440, 287, 89, 55, 55, 322, 67, 64, 76, 239, 82, 384, 470, 278, 278, 139, 139, 251, 241, 431, 111, 111, 111, 438, 438, 301, 416, 416, 144, 27, 106, 106, 306, 306, 306, 396, 313, 143, 131, 162, 54, 232, 482, 238, 6, 272, 470, 470, 151, 240, 325, 325, 41, 324, 324, 324, 3, 3, 3, 3, 440, 188, 188, 121, 121, 121, 121, 53, 76, 259, 74, 425, 425, 386, 499, 265, 428, 85, 146, 146, 203, 399, 291, 291, 291, 291, 291, 291, 303, 243, 243, 243, 82, 75, 227, 419, 439, 439, 439, 237, 193, 140, 193, 17]
after is :
202
[17, 17, 17, 296, 209, 82, 188, 177, 188, 188, 177, 177, 177, 177, 345, 364, 364, 389, 345, 58, 131, 389, 58, 58, 58, 110, 139, 110, 215, 486, 460, 215, 82, 96, 82, 402, 82, 82, 87, 377, 87, 236, 87, 82, 265, 265, 265, 265, 265, 265, 180, 146, 265, 399, 146, 217, 429, 399, 429, 196, 429, 429, 429, 429, 246, 429, 3, 429, 440, 251, 431, 251, 235, 235, 241, 235, 241, 426, 413, 235, 413, 413, 413, 413, 282, 117, 413, 413, 335, 404, 195, 335, 440, 440, 335, 55, 335, 440, 83, 440, 55, 33, 108, 33, 108, 351, 119, 351, 139, 278, 139, 175, 139, 139, 139, 111, 111, 111, 111, 111, 106, 416, 405, 438, 422, 438, 111, 405, 422, 180, 416, 232, 232, 240, 405, 240, 232, 206, 206, 232, 206, 232, 482, 162, 162, 470, 151, 240, 240, 406, 406, 406, 406, 337, 324, 3, 406, 324, 3, 324, 121, 3, 121, 121, 121, 74, 394, 465, 386, 386, 386, 386, 425, 387, 65, 146, 291, 469, 399, 399, 291, 291, 291, 243, 291, 291, 303, 82, 227, 227, 243, 439, 439, 439, 417, 417, 78, 82, 128, 244, 193, 193]
tensor([406], device='cuda:0', dtype=torch.int32)
text_len:406
prefix_len:203
第0个序列meet end_token: 1024
第0个序列end， 终止长度为202（包含终止符）
所有序列终止
200
torch.Size([1, 200, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:KSP_arctic_b0506
generate
 26%|██▌       | 13/50 [08:18<27:35, 44.74s/it]processing 13th semantic_sys file
13
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
140
[17, 17, 17, 140, 140, 127, 87, 87, 132, 43, 399, 70, 70, 65, 65, 65, 284, 284, 481, 240, 240, 285, 406, 467, 84, 302, 302, 274, 274, 98, 335, 14, 14, 287, 287, 287, 284, 353, 206, 240, 313, 313, 236, 196, 10, 94, 331, 331, 443, 443, 178, 178, 458, 96, 96, 54, 54, 86, 86, 6, 336, 384, 384, 93, 93, 93, 93, 93, 93, 207, 207, 207, 207, 207, 188, 177, 177, 177, 177, 82, 401, 401, 196, 217, 70, 65, 65, 428, 428, 428, 428, 146, 146, 252, 143, 36, 131, 183, 183, 183, 183, 451, 451, 30, 30, 30, 324, 301, 301, 416, 416, 239, 144, 27, 106, 106, 106, 426, 426, 426, 426, 426, 426, 426, 282, 282, 388, 388, 303, 303, 303, 303, 117, 48, 48, 417, 193, 140, 140, 193]
after is :
140
[17, 17, 17, 296, 184, 108, 82, 320, 377, 108, 377, 87, 377, 87, 70, 70, 399, 284, 481, 284, 306, 406, 406, 306, 467, 306, 406, 306, 284, 88, 467, 16, 16, 274, 88, 274, 274, 88, 88, 440, 450, 313, 396, 313, 309, 10, 10, 443, 309, 331, 443, 443, 443, 96, 86, 443, 232, 86, 86, 238, 86, 86, 6, 6, 93, 272, 93, 272, 403, 207, 207, 207, 207, 207, 207, 19, 440, 207, 335, 177, 385, 217, 335, 177, 65, 217, 65, 217, 217, 217, 65, 146, 146, 428, 428, 428, 65, 146, 183, 183, 183, 451, 451, 325, 30, 239, 30, 416, 27, 239, 27, 180, 144, 180, 180, 426, 426, 426, 426, 426, 426, 426, 426, 426, 282, 117, 388, 303, 303, 303, 48, 48, 439, 439, 82, 82, 128, 491, 193, 17]
tensor([282], device='cuda:0', dtype=torch.int32)
text_len:282
prefix_len:141
第0个序列meet end_token: 1024
第0个序列end， 终止长度为140（包含终止符）
所有序列终止
138
torch.Size([1, 138, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:KSP_arctic_b0514
generate
 28%|██▊       | 14/50 [08:47<23:53, 39.81s/it]processing 14th semantic_sys file
14
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
130
[17, 17, 17, 296, 296, 7, 8, 159, 159, 159, 159, 313, 314, 233, 82, 131, 483, 14, 14, 287, 287, 287, 287, 287, 284, 284, 284, 206, 175, 251, 122, 212, 34, 288, 288, 288, 288, 24, 34, 166, 166, 324, 324, 324, 3, 58, 183, 183, 183, 451, 451, 30, 286, 286, 286, 264, 264, 264, 468, 468, 313, 313, 24, 90, 90, 143, 82, 140, 144, 27, 370, 370, 370, 53, 53, 394, 76, 129, 82, 74, 441, 441, 153, 153, 387, 387, 387, 368, 368, 453, 9, 238, 272, 272, 183, 183, 57, 57, 203, 53, 394, 394, 465, 162, 54, 172, 273, 279, 279, 279, 279, 279, 279, 279, 37, 358, 352, 352, 352, 352, 352, 352, 352, 112, 439, 417, 417, 193, 193, 193]
after is :
130
[17, 17, 17, 296, 296, 184, 184, 184, 7, 159, 285, 159, 159, 159, 159, 131, 14, 14, 14, 14, 14, 297, 297, 297, 297, 297, 297, 42, 297, 293, 443, 293, 288, 240, 443, 288, 443, 324, 443, 324, 183, 324, 324, 324, 183, 324, 183, 183, 30, 183, 30, 464, 464, 254, 254, 143, 254, 143, 458, 458, 458, 121, 27, 144, 27, 144, 121, 437, 144, 27, 76, 394, 425, 386, 496, 496, 496, 496, 496, 274, 54, 54, 368, 54, 238, 272, 272, 272, 57, 54, 54, 57, 394, 53, 172, 232, 232, 232, 162, 232, 115, 273, 115, 279, 273, 279, 279, 279, 279, 352, 352, 352, 352, 352, 352, 352, 82, 112, 352, 439, 352, 112, 439, 439, 78, 128, 128, 244, 244, 193]
tensor([262], device='cuda:0', dtype=torch.int32)
text_len:262
prefix_len:131
第0个序列meet end_token: 1024
第0个序列end， 终止长度为131（包含终止符）
所有序列终止
129
torch.Size([1, 129, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:KSP_arctic_b0515
generate
 30%|███       | 15/50 [09:12<20:36, 35.33s/it]processing 15th semantic_sys file
15
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
153
[17, 17, 20, 296, 296, 7, 7, 8, 354, 159, 159, 159, 159, 313, 313, 24, 314, 32, 32, 239, 127, 114, 0, 0, 0, 240, 285, 380, 380, 141, 141, 141, 281, 281, 453, 168, 106, 106, 297, 297, 297, 293, 293, 122, 122, 186, 478, 54, 54, 273, 494, 153, 387, 313, 313, 129, 129, 140, 384, 119, 106, 405, 405, 405, 405, 206, 178, 178, 458, 140, 192, 192, 69, 69, 223, 223, 130, 130, 402, 402, 402, 397, 133, 345, 407, 407, 407, 143, 36, 310, 107, 447, 221, 221, 458, 144, 27, 190, 487, 487, 499, 486, 486, 486, 486, 460, 460, 460, 460, 169, 352, 352, 352, 402, 96, 82, 131, 340, 340, 340, 466, 466, 22, 22, 283, 455, 455, 4, 280, 280, 278, 278, 278, 278, 175, 81, 81, 278, 120, 120, 120, 37, 37, 37, 24, 310, 310, 310, 107, 107, 18, 193, 193]
after is :
153
[17, 17, 296, 296, 159, 184, 159, 320, 159, 159, 159, 159, 159, 35, 401, 472, 472, 127, 127, 222, 0, 468, 222, 245, 43, 141, 9, 141, 281, 453, 14, 168, 106, 297, 297, 297, 293, 297, 297, 297, 273, 224, 224, 224, 84, 172, 274, 496, 494, 274, 274, 496, 274, 129, 274, 129, 108, 351, 108, 405, 405, 206, 178, 34, 178, 82, 178, 223, 192, 130, 192, 192, 130, 130, 345, 130, 407, 397, 407, 310, 407, 407, 221, 82, 190, 82, 208, 190, 499, 487, 190, 487, 190, 499, 486, 460, 460, 486, 460, 460, 460, 352, 352, 352, 352, 352, 340, 440, 116, 188, 116, 22, 340, 466, 466, 283, 455, 283, 455, 43, 4, 455, 455, 455, 278, 278, 278, 81, 469, 175, 469, 24, 24, 24, 37, 310, 310, 310, 107, 107, 107, 18, 18, 107, 18, 439, 237, 237, 439, 421, 193, 193, 193]
tensor([308], device='cuda:0', dtype=torch.int32)
text_len:308
prefix_len:154
第0个序列meet end_token: 1024
第0个序列end， 终止长度为153（包含终止符）
所有序列终止
151
torch.Size([1, 151, 16])
output_dir is /home/v-zhijunjia/zhijundata_small_v2/data_local/accent_wer/val_ac_models/converted_can_del/valle_nar_ac_7_epoch__topk_7_2024-01-20_20:35:55
sys_file:KSP_arctic_b0518
generate
 32%|███▏      | 16/50 [09:44<19:31, 34.47s/it]processing 16th semantic_sys file
16
args.target_mode==1 or args.target_mode==2
semantic nums is 1
txt2semantic need prompt
before_semantic:
107
[17, 17, 296, 140, 140, 144, 27, 106, 319, 319, 203, 203, 53, 88, 88, 106, 426, 426, 426, 426, 426, 426, 426, 282, 282, 388, 195, 303, 303, 303, 303, 303, 303, 303, 195, 195, 7, 7, 212, 239, 384, 384, 180, 443, 443, 240, 240, 251, 251, 301, 196, 217, 217, 70, 70, 65, 256, 256, 256, 256, 256, 256, 256, 240, 285, 313, 472, 143, 401, 82, 36, 310, 107, 395, 119, 351, 351, 486, 486, 486, 240, 175, 175, 81, 81, 432, 432, 290, 290, 434, 339, 339, 243, 243, 310, 310, 107, 447, 447, 238, 6, 82, 227, 227, 419, 193, 193]
after is :
107
[17, 17, 296, 82, 296, 82, 27, 27, 351, 319, 27, 319, 284, 399, 53, 53, 53, 426, 426, 426, 426, 426, 426, 388, 282, 117, 195, 388, 225, 117, 404, 225, 225, 82, 225, 197, 225, 139, 139, 371, 293, 293, 293, 384, 371, 371, 497, 497, 399, 70, 293, 293, 153, 313, 313, 36, 236, 143, 313, 310, 313, 36, 143, 395, 310, 82, 351, 351, 351, 351, 486, 175, 175, 486, 486, 175, 450, 175, 175, 81, 81, 275, 275, 81, 388, 24, 195, 195, 64, 195, 310, 310, 243, 107, 310, 310, 447, 238, 447, 439, 82, 78, 439, 78, 439, 244, 193]
tensor([216], device='cuda:0', dtype=torch.int32)
text_len:216
prefix_len:108
